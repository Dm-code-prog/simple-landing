/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/scene.gltf --transform 
Files: public/scene.gltf [49.54KB] > scene-transformed.glb [94.95KB] (-92%)
Author: DatSketch (https://sketchfab.com/DatSketch)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/apple-iphone-13-pro-max-4328dea00e47497dbeac73c556121bc9
Title: Apple iPhone 13 Pro Max
*/

'use client'

import React, { useRef, useState, useMemo } from 'react'
import { useGLTF, Html, Plane } from '@react-three/drei'
import * as THREE from 'three'

export function PhoneModel(props) {
  const { nodes, materials } = useGLTF('/scene-transformed.glb')
  const [hidden, setHidden] = useState(false)

  // Find the wallpaper material mesh for screen positioning
  const screenMesh = useMemo(() => {
    // The screen is the mesh with Wallpaper material
    return nodes.Body_Wallpaper_0
  }, [nodes])

  console.log('screenMesh', screenMesh)

  // Calculate screen position for HTML overlay
  const screenTransform = useMemo(() => {
    if (screenMesh) {
      // Get the bounding box to center the HTML content
      const box = new THREE.Box3().setFromObject(screenMesh)
      const center = box.getCenter(new THREE.Vector3())
      const size = box.getSize(new THREE.Vector3())

      return {
        position: [center.x, center.y, center.z - 0.01], // Slightly in front
        rotation: [0, 0, 0],
        scale: [size.x * 1, size.y * 1, 1], // Scale to fit screen
      }
    }
    return {
      position: [0, 0.5, 0.1],
      rotation: [0, 0, 0],
      scale: [1, 1, 1],
    }
  }, [screenMesh])

  // const plainMaterial = useMemo(() => new THREE.MeshBasicMaterial({ color: 'black', side: THREE.DoubleSide }), [])

  // Create a transparent material for the screen mesh to serve as a reference
  const screenMaterial = useMemo(
    () =>
      new THREE.MeshBasicMaterial({
        color: 'red',
        side: THREE.DoubleSide,
      }),
    [],
  )

  return (
    <group {...props} dispose={null}>
      {/* Phone frame and components */}
      <mesh geometry={nodes.Frame_Frame_0.geometry} material={materials.PaletteMaterial001} />
      <mesh geometry={nodes.Frame_Mic_0.geometry} material={materials.material} />
      {/* <mesh geometry={nodes.Body_Wallpaper_0.geometry} material={screenMaterial} /> */}
      <mesh visible={true} geometry={nodes.Body_Wallpaper_0.geometry}>
        <Html
          transform
          // center
          wrapperClass='phone-screen-html'
          distanceFactor={0.5}
          position={[0, 0, 0.01]}
          rotation={[0, -Math.PI / 2, 0]}
          scale={1}
          sprite
        >
          <div
            style={{
              width: '240px',
              height: '400px',
              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
              color: 'white',
              padding: '15px',
              borderRadius: '8px',
              fontSize: '14px',
              fontFamily: 'Arial, sans-serif',
              textAlign: 'center',
              display: 'flex',
              flexDirection: 'column',
              justifyContent: 'center',
              alignItems: 'center',
              boxShadow: '0 2px 10px rgba(0, 0, 0, 0.3)',
              border: '1px solid rgba(255, 255, 255, 0.2)',
              transformOrigin: 'center center',
            }}
          >
            <h1 style={{ color: 'white', fontSize: '20px', margin: '0 0 8px 0' }}>Hello</h1>
            <p style={{ margin: '0', opacity: 0.9, fontSize: '12px' }}>Interactive Screen</p>
          </div>
        </Html>
        {/* <meshBasicMaterial side={THREE.DoubleSide} color='red' /> */}
        {/* <Html className='content' position={[0, 0.05, -0.09]} scale={[100, 100, 100]}>
          <div
            style={{
              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
              color: 'white',
              padding: '20px',
              borderRadius: '12px',
              fontSize: '12px',
              fontFamily: 'Arial, sans-serif',
              textAlign: 'center',
              width: '100%',
              height: '100%',
              display: 'flex',
              flexDirection: 'column',
              justifyContent: 'center',
              alignItems: 'center',
              boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)',
              border: '2px solid rgba(255, 255, 255, 0.2)',
            }}
          >
            <h3 style={{ margin: '0 0 10px 0', fontSize: '14px', fontWeight: 'bold' }}>ðŸ“± iPhone 13 Pro Max</h3>
            <p style={{ margin: '0 0 10px 0', opacity: 0.9, fontSize: '10px' }}>Optimized 3D Model</p>
            <div
              style={{
                background: 'rgba(255, 255, 255, 0.2)',
                padding: '5px 10px',
                borderRadius: '6px',
                fontSize: '9px',
              }}
            >
              Interactive Screen
            </div>
          </div>
        </Html> */}
      </mesh>
      <mesh geometry={nodes.Body_Camera_Glass_0.geometry} material={materials.PaletteMaterial002} />
      <mesh geometry={nodes.Body_Lens_0.geometry} material={materials.Lens} />
    </group>
  )
}

useGLTF.preload('/scene-transformed.glb')
